name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_FOLDER: ${{github.workspace}}/build
  DEVEL_FOLDER: ${{github.workspace}}/devel

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    #
    # build and install all dependencies.
    #

    - name: Install apt dependencies.
      run: >
        sudo apt update && apt install -y  
        build-essential python3-pip cmake libcereal-dev	libyaml-cpp-dev
        libboost-all-dev libgtest-dev libeigen3-dev libedit-dev doxygen
        libncurses5-dev freeglut3-dev libxmu-dev git ssh lsb-release
      
    - name: Install pip dependencies.
      run: >
        sudo -H pip3 install "setuptools>=40.0" && sudo -H pip3 install
        colcon-common-extensions treep fyplot pyside2 empy flake8 m2r sphinx
        pyjson recommonmark sphinx_rtd_theme sphinxcontrib-moderncmakedomain
        breathe

    - name: Create separate environment for build and source dependencies.
      run: mkdir $BUILD_FOLDER && mkdir $DEVEL_FOLDER

    - name: Clone the treep configuration
      shell: bash
      working-directory: $DEVEL_FOLDER
      run: git clone git@github.com:machines-in-motion/treep_machines_in_motion.git

    - name: Treep clone the source dependencies.
      shell: bash
      working-directory: $DEVEL_FOLDER
      run: treep --clone PACKAGE_TEMPLATE

    - name: Build the dependencies.
      working-directory: $DEVEL_FOLDER/workspace
      shell: bash
      run: colcon build --cmake-args -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    #
    # Build and test the current package.
    #

    - name: Configure CMake
      shell: bash
      working-directory: $BUILD_FOLDER
      run: >
        source $DEVEL_FOLDER/workspace/install/setup.bash &&
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: $BUILD_FOLDER
      shell: bash
      run: >
        source $DEVEL_FOLDER/workspace/install/setup.bash &&
        cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: $BUILD_FOLDER
      shell: bash
      run: >
        source $DEVEL_FOLDER/workspace/install/setup.bash &&
        env CTEST_OUTPUT_ON_FAILURE=1 ctest -C $BUILD_TYPE
